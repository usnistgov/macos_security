id: os_calendar_app_disable
title: Disable Calendar.app
discussion: |
  The macOS built-in Calendar.app _MUST_ be disabled as this application can establish a connection to non-approved services. This rule is in place to prevent inadvertent data transfers.

  [IMPORTANT]
  ====
  Some organizations allow the use of the built-in Calendar.app for organizational communication. Information System Security Officers (ISSOs) may make the risk-based decision not to disable the macOS built-in Calendar.app to avoid losing this functionality, but they are advised to first fully weigh the potential risks posed to their organization.
  ====

  [IMPORTANT]
  ====
  Apple has deprecated the use of link:https://github.com/apple/device-management/blob/eb51fb0cb9626cac4717858556912c257a734ce0/mdm/profiles/com.apple.applicationaccess.new.yaml#L67-L70[application restriction controls], using these controls may not work as expected. Third party software may be required to fulfill the compliance requirements.
  ====
references:
  nist:
    cce:
      sequoia:
        - CCE-94171-6
      sonoma:
        - CCE-92771-5
      ventura:
        - CCE-91769-0
      monterey:
        - CCE-90909-3
      big_sur:
        - CCE-85300-2
      catalina:
        - CCE-84750-9
    800-53r5:
      - AC-20
      - CM-7
      - CM-7(1)
    800-171r3:
      - 03.01.20
      - 03.04.06
  disa:
    disa_stig:
      big_sur:
        - APPL-11-002023
      catalina:
        - AOSX-15-002023
    cmmc:
      - AC.L1-3.1.20
      - CM.L2-3.4.6
      - CM.L2-3.4.7
  cis:
    controls_v8:
      - 4.1
      - 4.8
platforms:
  macOS:
    check: $OS_VALUE
    result: $OS_VALUE
    fix: |
      This is implemented by a Configuration Profile.
    sequoia:
      severity: medium
      check: |-
        /usr/bin/osascript -l JavaScript << EOS
        function run() {
          let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess.new')\
          .objectForKey('familyControlsEnabled'))
          let pathlist = $.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess.new')\
          .objectForKey('pathBlackList').js
          for ( let app in pathlist ) {
              if ( ObjC.unwrap(pathlist[app]) == "/Applications/Calendar.app" && pref1 == true ){
                  return("true")
              }
          }
          return("false")
          }
        EOS
      result:
        string: 'true'
    sonoma:
      severity: medium
      check: |-
        /usr/bin/osascript -l JavaScript << EOS
        function run() {
          let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess.new')\
          .objectForKey('familyControlsEnabled'))
          let pathlist = $.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess.new')\
          .objectForKey('pathBlackList').js
          for ( let app in pathlist ) {
              if ( ObjC.unwrap(pathlist[app]) == "/Applications/Calendar.app" && pref1 == true ){
                  return("true")
              }
          }
          return("false")
          }
        EOS
      result:
        string: 'true'
    ventura:
      severity: medium
      check: |-
        /usr/bin/osascript -l JavaScript << EOS
        function run() {
          let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess.new')\
          .objectForKey('familyControlsEnabled'))
          let pathlist = $.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess.new')\
          .objectForKey('pathBlackList').js
          for ( let app in pathlist ) {
              if ( ObjC.unwrap(pathlist[app]) == "/Applications/Calendar.app" && pref1 == true ){
                  return("true")
              }
          }
          return("false")
          }
        EOS
      result:
        string: 'true'
    monterey:
      severity: medium
      check: |-
        /usr/bin/osascript -l JavaScript << EOS
        function run() {
          let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess.new')\
          .objectForKey('familyControlsEnabled'))
          let pathlist = $.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess.new')\
          .objectForKey('pathBlackList').js
          for ( let app in pathlist ) {
              if ( ObjC.unwrap(pathlist[app]) == "/Applications/Calendar.app" && pref1 == true ){
                  return("true")
              }
          }
          return("false")
          }
        EOS
      result:
        string: 'true'
    big_sur:
      severity: medium
      benchmarks:
        - disa_stig
      check: /usr/bin/profiles -P -o stdout | /usr/bin/grep -A 20 familyControlsEnabled | /usr/bin/grep -c "/Applications/Calendar.app"
      result:
        integer: 1
    catalina:
      severity: medium
      benchmarks:
        - disa_stig
      check: /usr/bin/profiles -P -o stdout | /usr/bin/grep -A 20 familyControlsEnabled | /usr/bin/grep -c "/Applications/Calendar.app"
      result:
        integer: 1
tags:
  - cnssi-1253_low
  - cnssi-1253_high
  - cnssi-1253_moderate
  - 800-53r5_low
  - 800-53r5_moderate
  - 800-53r5_high
  - 800-171
  - cnssi-1253
  - cisv8
mobileconfig_info:
  com.apple.applicationaccess.new:
    familyControlsEnabled: true
    pathBlackList:
      - /Applications/Calendar.app
