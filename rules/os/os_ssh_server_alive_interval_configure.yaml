id: os_ssh_server_alive_interval_configure
title: Configure SSH ServerAliveInterval option set to $ODV
discussion: |
  SSH _MUST_ be configured with an Active Server Alive Maximum Count set to $ODV.

  Setting the Active Server Alive Maximum Count to $ODV will log users out after a $ODV seconds interval of inactivity.

  NOTE: /etc/ssh/ssh_config will be automatically modified to its original state following any update or major upgrade to the operating system.

  NOTE: On macOS 15.2 and higher the SSH configuration can be reset to the macOS default by running /usr/libexec/reset-ssh-configuration.
references:
  nist:
    cce:
      sequoia:
        - CCE-94301-9
      sonoma:
        - CCE-92896-0
      ventura:
        - CCE-91885-4
      monterey:
        - CCE-91006-7
      big_sur:
        - CCE-85381-2
      catalina:
        - CCE-84919-0
    800-53r5:
      - SC-10
      - AC-12
    800-171r3:
      - 03.01.11
      - 03.13.09
  disa:
    cci:
      - CCI-001133
    srg:
      - SRG-OS-000163-GPOS-00072
    disa_stig:
      sequoia:
        - APPL-15-000110
      sonoma:
        - APPL-14-000110
    cmmc:
      - AC.L2-3.1.11
      - SC.L2-3.13.9
platforms:
  macOS:
    check: $OS_VALUE
    result: $OS_VALUE
    fix: $OS_VALUE
    sequoia:
      severity: medium
      benchmarks:
        - disa_stig
      check: |-
        ret="pass"
        for u in $(/usr/bin/dscl . -list /Users UniqueID | /usr/bin/awk '$2 > 500 {print $1}'); do
          sshCheck=$(/usr/bin/sudo -u $u /usr/bin/ssh -G . | /usr/bin/grep -c "^serveraliveinterval $ODV")
          if [[ "$sshCheck" == "0" ]]; then
            ret="fail"
            break
          fi
        done
        /bin/echo $ret
      fix: "[source,bash]\n----\ninclude_dir=$(/usr/bin/awk '/^Include/ {print $2}' /etc/ssh/ssh_config | /usr/bin/tr -d '*')\n\nssh_config_string=(\"ServerAliveInterval $ODV\")\nfor ssh_config in $ssh_config_string; do\n  ssh_setting=$(echo $ssh_config | /usr/bin/cut -d \" \" -f1)\n  /usr/bin/grep -qEi \"^$ssh_setting\" \"${include_dir}01-mscp-ssh.conf\" && /usr/bin/sed -i \"\" \"s/^$ssh_setting.*/${ssh_config}/\" \"${include_dir}01-mscp-ssh.conf\" || echo \"$ssh_config\" >> \"${include_dir}01-mscp-ssh.conf\"\n  for u in $(/usr/bin/dscl . list /users shell | /usr/bin/egrep -v '(^_)|(root)|(/usr/bin/false)' | /usr/bin/awk '{print $1}'); do\n    config=$(/usr/bin/sudo -u $u /usr/bin/ssh -Gv . 2>&1)\n    configfiles=$(echo \"$config\" | /usr/bin/awk '/Reading configuration data/ {print $NF}'| /usr/bin/tr -d '\\r')\n    configarray=( ${(f)configfiles} )\n    if ! echo $config | /usr/bin/grep -q -i \"$ssh_config\" ; then\n      for c in $configarray; do\n        if [[ \"$c\" == \"/etc/ssh/crypto.conf\" ]]; then\n          continue\n        fi\n  \n        /usr/bin/sudo -u $u /usr/bin/grep -qEi \"^$ssh_setting\" \"$c\" && /usr/bin/sed -i \"\" \"s/^$ssh_setting.*/${ssh_config}/I\" \"$c\"\n        if [[ \"$c\" =~ \".ssh/config\" ]]; then\n          if /usr/bin/grep -qEi \"$ssh_setting\" \"$c\" 2> /dev/null; then\n            old_file=$(cat ~$u/.ssh/config)\n            echo \"$ssh_config\" > ~$u/.ssh/config\n            echo \"$old_file\" >> ~$u/.ssh/config\n          fi\n        fi\n      done\n    fi\n  done\ndone\n----"
      result:
        string: pass
    sonoma:
      severity: medium
      benchmarks:
        - disa_stig
      check: |-
        ret="pass"
        for u in $(/usr/bin/dscl . -list /Users UniqueID | /usr/bin/awk '$2 > 500 {print $1}'); do
          sshCheck=$(/usr/bin/sudo -u $u /usr/bin/ssh -G . | /usr/bin/grep -c "^serveraliveinterval $ODV")
          if [[ "$sshCheck" == "0" ]]; then
            ret="fail"
            break
          fi
        done
        /bin/echo $ret
      fix: |-
        [source,bash]
        ----
        for u in $(/usr/bin/dscl . -list /Users UniqueID | /usr/bin/awk '$2 > 500 {print $1}'); do
          config=$(/usr/bin/sudo -u $u /usr/bin/ssh -Gv . 2>&1 | /usr/bin/awk '/Reading configuration data/ {print $NF}'| /usr/bin/tr -d '\r')
          configarray=( ${(f)config} )
          for c in $configarray; do
            /usr/bin/sudo -u $u /usr/bin/grep -q '^ServerAliveInterval' "$c" && /usr/bin/sed -i '' 's/.*ServerAliveInterval.*/ServerAliveInterval $ODV/' "$c" || /bin/echo 'ServerAliveInterval $ODV' >> "$c"
          done
        done
        ----
      result:
        string: pass
    ventura:
      check: |-
        ret="pass"
        for u in $(/usr/bin/dscl . -list /Users UniqueID | /usr/bin/awk '$2 > 500 {print $1}'); do
          sshCheck=$(/usr/bin/sudo -u $u /usr/bin/ssh -G . | /usr/bin/grep -c "^serveraliveinterval $ODV")
          if [[ "$sshCheck" == "0" ]]; then
            ret="fail"
            break
          fi
        done
        /bin/echo $ret
      fix: |-
        [source,bash]
        ----
        for u in $(/usr/bin/dscl . -list /Users UniqueID | /usr/bin/awk '$2 > 500 {print $1}'); do
          config=$(/usr/bin/sudo -u $u /usr/bin/ssh -Gv . 2>&1 | /usr/bin/awk '/Reading configuration data/ {print $NF}'| /usr/bin/tr -d '\r')
          configarray=( ${(f)config} )
          for c in $configarray; do
            /usr/bin/sudo -u $u /usr/bin/grep -q '^ServerAliveInterval' "$c" && /usr/bin/sed -i '' 's/.*ServerAliveInterval.*/ServerAliveInterval $ODV/' "$c" || /bin/echo 'ServerAliveInterval $ODV' >> "$c"
          done
        done
        ----
      result:
        string: pass
    monterey:
      check: |-
        ret="pass"
        for u in $(/usr/bin/dscl . -list /Users UniqueID | /usr/bin/awk '$2 > 500 {print $1}'); do
          sshCheck=$(/usr/bin/sudo -u $u /usr/bin/ssh -G . | /usr/bin/grep -c "^serveraliveinterval $ODV")
          if [[ "$sshCheck" == "0" ]]; then
            ret="fail"
            break
          fi
        done
        /bin/echo $ret
      fix: |-
        [source,bash]
        ----
        for u in $(/usr/bin/dscl . -list /Users UniqueID | /usr/bin/awk '$2 > 500 {print $1}'); do
          config=$(/usr/bin/sudo -u $u /usr/bin/ssh -Gv . 2>&1 | /usr/bin/awk '/Reading configuration data/ {print $NF}'| /usr/bin/tr -d '\r')
          configarray=( ${(f)config} )
          for c in $configarray; do
            /usr/bin/sudo -u $u /usr/bin/grep -q '^ServerAliveInterval' "$c" && /usr/bin/sed -i '' 's/.*ServerAliveInterval.*/ServerAliveInterval $ODV/' "$c" || /bin/echo 'ServerAliveInterval $ODV' >> "$c"
          done
        done
        ----
      result:
        string: pass
    big_sur:
      check: /usr/bin/awk '/^ServerAliveInterval/{print $2}' /etc/ssh/ssh_config
      fix: |-
        [source,bash]
        ----
        /usr/bin/grep -q '^ServerAliveInterval' /etc/ssh/ssh_config && /usr/bin/sed -i.bak  's/.*ServerAliveInterval.*/ServerAliveInterval $ODV/' /etc/ssh/ssh_config || /bin/echo 'ServerAliveInterval $ODV' >> /etc/ssh/ssh_config
        ----
      result:
        integer: $ODV
    catalina:
      check: /usr/bin/awk '/^ServerAliveInterval/{print $2}' /etc/ssh/ssh_config
      fix: |-
        [source,bash]
        ----
        /usr/bin/grep -q '^ServerAliveInterval' /etc/ssh/ssh_config && /usr/bin/sed -i.bak  's/.*ServerAliveInterval.*/ServerAliveInterval $ODV/' /etc/ssh/ssh_config || /bin/echo 'ServerAliveInterval $ODV' >> /etc/ssh/ssh_config
        ----
      result:
        integer: $ODV
odv:
  hint: Number of seconds.
  recommended: 900
  stig: 900
tags:
  - 800-53r5_moderate
  - 800-53r5_high
  - 800-171
  - cnssi-1253_low
  - cnssi-1253_high
  - cmmc_lvl2
  - cnssi-1253_moderate
  - cnssi-1253
